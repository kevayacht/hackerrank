def max_trailing(levels):
    low = levels[0]
    high = 0
    for i in range(len(levels)):

        if levels[i] < low:
            low = levels[i]
        elif levels[i] - low > high:
            high = levels[i] - low

    # return -1 if there is never a lower reading.
    if high == 0:
        return -1
    return high


def preamble():
    arr = [
        -532518,
        -924430,
        -790120,
        -291423,
        -68036,
        -403550,
        -167909,
        -507673,
        -464360,
        -712387,
        -780002,
        -144727,
        -566641,
        -534304,
        -821103,
        -325253,
        -403419,
        -916925,
        -213986,
        -107970,
        -694038,
        -264915,
        -955910,
        -989251,
        -873763,
        -374479,
        -192601,
        -375475,
        -395049,
        -575141,
        -710921,
        -831008,
        -64081,
        -944680,
        -207347,
        -989442,
        -353300,
        -221588,
        -570001,
        -434666,
        -316812,
        -948461,
        -110876,
        -181007,
        -645292,
        -912601,
        -978128,
        -922032,
        -189910,
        -537070,
        -721408,
        -157515,
        -450740,
        -988973,
        -751069,
        -256052,
        -45908,
        -2942,
        -555364,
        -508204,
        -391326,
        -359455,
        -133991,
        -76746,
        -108582,
        -43160,
        -617209,
        -998008,
        -15358,
        -333466,
        -12736,
        -32952,
        -76496,
        -825638,
        -878654,
        -17350,
        -981971,
        -777983,
        -121025,
        -869153,
        -32288,
        -284806,
        -416712,
        -190594,
        -296376,
        -323909,
        -508834,
        -939492,
        -510556,
        -396236,
        -847699,
        -75710,
        -182089,
        -828616,
        -778117,
        -866118,
        -956263,
        -769143,
        -53331,
        -52802,
        -973645,
        -693390,
        -925968,
        -304425,
        -897976,
        -605760,
        -765225,
        -700401,
        -823375,
        -210169,
        -517456,
        -640385,
        -114922,
        -299107,
        -312629,
        -794411,
        -239897,
        -431419,
        -841880,
        -332427,
        -498970,
        -832915,
        -127842,
        -27785,
        -364364,
        -434650,
        -228966,
        -207737,
        -279845,
        -998825,
        -111180,
        -447242,
        -384236,
        -230351,
        -305622,
        -966796,
        -438327,
        -795247,
        -420420,
        -124740,
        -466174,
        -927551,
        -507421,
        -359243,
        -845577,
        -796581,
        -379715,
        -469427,
        -642606,
        -555365,
        -815804,
        -507760,
        -522022,
        -725488,
        -115786,
        -362388,
        -815752,
        -148480,
        -41391,
        -56977,
        -783850,
        -84037,
        -770547,
        -582093,
        -773575,
        -485267,
        -902131,
        -765315,
        -381230,
        -293178,
        -166614,
        -557205,
        -723718,
        -208075,
        -763220,
        -24747,
        -952862,
        -590586,
        -200035,
        -763642,
        -502985,
        -794087,
        -65365,
        -94053,
        -351492,
        -225160,
        -840032,
        -16905,
        -533042,
        -284700,
        -479035,
        -503369,
        -890227,
        -980812,
        -60077,
        -904619,
        -71115,
        -27265,
        -687668,
        -379688,
        -45591,
        -363589,
        -171517,
        -644823,
        -948843,
        -75497,
        -900934,
        -864579,
        -638330,
        -291493,
        -295315,
        -576482,
        -665044,
        -275582,
        -340048,
        -962033,
        -295188,
        -756760,
        -976438,
        -987666,
        -244042,
        -833403,
        -108902,
        -335884,
        -815972,
        -834530,
        -944040,
        -167520,
        -75610,
        -391206,
        -176602,
        -65090,
        -978533,
        -688547,
        -959513,
        -595524,
        -137970,
        -267305,
        -65621,
        -665475,
        -345806,
        -302248,
        -154388,
        -714995,
        -329787,
        -137826,
        -731206,
        -395965,
        -679377,
        -869402,
        -949371,
        -979592,
        -609030,
        -439035,
        -859637,
        -423612,
        -625324,
        -41894,
        -19641,
        -674357,
        -458735,
        -142059,
        -794058,
        -105215,
        -599009,
        -682076,
        -597201,
        -269702,
        -327571,
        -905281,
        -899049,
        -921874,
        -329749,
        -8802,
        -16358,
        -686611,
        -789553,
        -589989,
        -959225,
        -519114,
        -808454,
        -296460,
        -558712,
        -955948,
        -304586,
        -675537,
        -379053,
        -396853,
        -20384,
        -64788,
        -362166,
        -457919,
        -122094,
        -945761,
        -125525,
        -83072,
        -945004,
        -464248,
        -761801,
        -554497,
        -20639,
        -120698,
        -155065,
        -673013,
        -350232,
        -444765,
        -564490,
        -268111,
        -383061,
        -94713,
        -293629,
        -451297,
        -264402,
        -720980,
        -926170,
        -50374,
        -160809,
        -123418,
        -322565,
        -20837,
        -992691,
        -762555,
        -164166,
        -490594,
        -48973,
        -508561,
        -530183,
        -957572,
        -926420,
        -816072,
        -320106,
        -847012,
        -769877,
        -686940,
        -282779,
        -480787,
        -918664,
        -738187,
        -143849,
        -934854,
        -945735,
        -606678,
        -953829,
        -865488,
        -295004,
        -473765,
        -452966,
        -320225,
        -798563,
        -840134,
        -108744,
        -588100,
        -427543,
        -13407,
        -983247,
        -396636,
        -370806,
        -700291,
        -843346,
        -37729,
        -962794,
        -905076,
        -237851,
        -458689,
        -277720,
        -846847,
        -332979,
        -136361,
        -884882,
        -25778,
        -32277,
        -702849,
        -474062,
        -356974,
        -376279,
        -150773,
        -71047,
        -409431,
        -777071,
        -591530,
        -149949,
        -303998,
        -212000,
        -471784,
        -50366,
        -874206,
        -138472,
        -253247,
        -535069,
        -125758,
        -161028,
        -24816,
        -94179,
        -201126,
        -509016,
        -414830,
        -938889,
        -215739,
        -289522,
        -913345,
        -177971,
        -639699,
        -200719,
        -247558,
        -288827,
        -672235,
        -727445,
        -591209,
        -896928,
        -615038,
        -15393,
        -115745,
        -186454,
        -315375,
        -811582,
        -409651,
        -388347,
        -444694,
        -894489,
    ]
    # result = max_trailing(arr)
    # result = maxDiff(arr)
    # print(result)   # expected 990023

    # arr2 = [-2, -3, -10, -2, -4, -8, -1]
    arr2 = [4, 3, 2, 1]
    result = max_trailing(arr2)
    print(result)  # expected 9

    # 529576


def main():
    preamble()
    print(-1 - -10)


if __name__ == "__main__":
    main()
